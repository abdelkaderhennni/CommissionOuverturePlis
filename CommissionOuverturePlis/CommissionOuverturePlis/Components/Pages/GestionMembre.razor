@page "/GestionMembres"
@using System.ComponentModel.DataAnnotations

<h3>Gestion des Membres</h3>

<EditForm Model="@membre" OnValidSubmit="@AjouterMembre">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-container">
        <div class="form-group">
            <label for="nom">Nom</label>
            <InputText id="nom" class="input-field" @bind-Value="membre.Nom" placeholder="Entrez le nom" />
        </div>

        <div class="form-group">
            <label for="prenom">Prénom</label>
            <InputText id="prenom" class="input-field" @bind-Value="membre.Prenom" placeholder="Entrez le prénom" />
        </div>

        <div class="form-group">
            <label for="fonction">Fonction</label>
            <InputText id="fonction" class="input-field" @bind-Value="membre.Fonction" placeholder="Entrez la fonction" />
        </div>

        <div class="form-group">
            <label for="email">Email</label>
            <InputText id="email" class="input-field" @bind-Value="membre.Email" placeholder="Entrez l'email" />
        </div>

        <div class="form-group">
            <label for="telephone">Téléphone</label>
            <InputText id="telephone" class="input-field" @bind-Value="membre.Telephone" placeholder="Entrez le téléphone" />
        </div>

        <div class="form-group">
            <label for="qualite">Qualité</label>
            <InputSelect id="qualite" class="input-field" @bind-Value="membre.Qualite">
                <option value="">Sélectionnez une qualité</option>
                <option value="Président">Président</option>
                <option value="Membre">Membre</option>
            </InputSelect>
        </div>

        <button type="submit" class="next-button">Ajouter le membre</button>
    </div>
</EditForm>

@code {
    private MembreModel membre = new();

    private void AjouterMembre()
    {
        Console.WriteLine($"Membre ajouté : {membre.Nom} {membre.Prenom}, Fonction : {membre.Fonction}, Email : {membre.Email}, Téléphone : {membre.Telephone}, Qualité : {membre.Qualite}");
    }

    public class MembreModel
    {
        [Required(ErrorMessage = "Le nom est requis.")]
        public string Nom { get; set; }

        [Required(ErrorMessage = "Le prénom est requis.")]
        public string Prenom { get; set; }

        public string Fonction { get; set; }

        [EmailAddress(ErrorMessage = "Email invalide.")]
        public string Email { get; set; }

        [Phone(ErrorMessage = "Numéro invalide.")]
        public string Telephone { get; set; }

        public string Qualite { get; set; }
    }
}

<style>
    .form-container {
        padding: 40px;
        max-width: 800px;
        margin: auto;
        font-family: 'Segoe UI', sans-serif;
        background-color: white;
        border-radius: 12px;
        box-shadow: 0px 6px 16px rgba(0, 0, 0, 0.1);
    }

    h3 {
        text-align: left;
        font-size: 28px;
        margin-bottom: 30px;
        color: #143565;
    }

    .form-group {
        display: flex;
        flex-direction: column;
        margin-bottom: 25px;
        padding: 0 50px;
    }

    label {
        font-size: 16px;
        margin-bottom: 8px;
        color: #333;
    }

    .input-field {
        height: 45px;
        padding: 10px 15px;
        border: 2px solid #143565;
        border-radius: 10px;
        font-size: 16px;
        outline: none;
        box-shadow: 0px 6px 8px rgba(0, 0, 0, 0.3);
        transition: box-shadow 0.2s ease;
    }

    .input-field:focus {
        border-color: #2d8492;
        box-shadow: 0 0 5px rgba(77, 160, 182, 0.5);
    }

    .next-button {
        margin-top: 30px;
        background-color: #143565;
        color: white;
        border: none;
        padding: 12px;
        border-radius: 8px;
        font-size: 16px;
        width: 200px;
        align-self: center;
        cursor: pointer;
        display: block;
        margin-left: auto;
        margin-right: auto;
    }

    .next-button:hover {
        background-color: #0f2d4c;
    }
</style>
